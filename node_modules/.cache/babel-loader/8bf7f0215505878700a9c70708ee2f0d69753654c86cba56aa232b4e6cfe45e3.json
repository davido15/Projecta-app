{"ast":null,"code":"var _jsxFileName = \"/Users/daviddornyoh/Downloads/hello-world-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatBotMessage(content) {\n  // Split by lines, format each line\n  return content.split('\\n').map(line => {\n    // Match: emoji, section title in bold, colon, rest\n    const match = line.match(/^(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|[\\u2600-\\u27BF\\uD83C-\\uDBFF\\uDC00-\\uDFFF\\u2700-\\u27BF\\u2B50\\u23F0\\u231A\\u23E9-\\u23EF\\u23F1-\\u23F3\\u25FD-\\u25FE\\u2614-\\u2615\\u2648-\\u2653\\u267B\\u2693\\u26A1\\u26AA-\\u26AB\\u26BD-\\u26BE\\u26C4-\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2-\\u26F3\\u26F5\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u2709\\u270A-\\u270B\\u2728\\u2733-\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934-\\u2935\\u2B05-\\u2B07\\u2B1B-\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299\\uD83C\\uDC04\\uD83C\\uDCCF\\uD83C\\uDD70-\\uD83C\\uDD71\\uD83C\\uDD7E-\\uD83C\\uDD7F\\uD83C\\uDD8E\\uD83C\\uDD91-\\uD83C\\uDD9A\\uD83C\\uDDE6-\\uD83C\\uDDFF\\uD83C\\uDE01-\\uD83C\\uDE02\\uD83C\\uDE1A\\uD83C\\uDE2F\\uD83C\\uDE32-\\uD83C\\uDE3A\\uD83C\\uDE50-\\uD83C\\uDE51\\uD83C\\uDF00-\\uD83D\\uDDFF\\uD83E\\uDD00-\\uD83E\\uDDFF\\uD83D\\uDC00-\\uD83D\\uDE4F\\uD83D\\uDE80-\\uD83D\\uDEF6\\uD83D\\uDFE0-\\uD83D\\uDFEB\\uD83D\\uDFEC-\\uD83D\\uDFFF\\uD83E\\uDD10-\\uD83E\\uDDFF]+)\\s*\\*\\*(.+?)\\*\\*:(.*)$/u);\n    if (match) {\n      const [, emoji, title, rest] = match;\n      return `${emoji} <strong>${title}:</strong>${rest}`;\n    }\n    return line;\n  }).join('<br/>');\n}\nfunction Message({\n  role,\n  content\n}) {\n  if (role === 'bot') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${role}`,\n      style: {\n        background: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"role-label\",\n        children: \"AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bubble ${role}`,\n        style: {\n          background: 'none',\n          color: '#222',\n          boxShadow: 'none'\n        },\n        dangerouslySetInnerHTML: {\n          __html: formatBotMessage(content)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${role}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"role-label\",\n      children: \"You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bubble ${role}`,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Message;\nexport default function App() {\n  _s();\n  var _filteredProjects$fin, _filteredProjects$fin2;\n  const [input, setInput] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const chatEndRef = useRef(null);\n\n  // Fetch projects on mount\n  useEffect(() => {\n    axios.get('http://127.0.0.1:3000/projects').then(res => {\n      setProjects(res.data);\n      if (res.data.length > 0) {\n        setSelectedProjectId(res.data[0].id);\n      }\n    }).catch(err => console.error('Failed to load projects', err));\n  }, []);\n\n  // Fetch messages for selected project\n  useEffect(() => {\n    if (selectedProjectId != null) {\n      axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`).then(res => setMessages(res.data)).catch(err => console.error('Failed to load messages', err));\n    } else {\n      setMessages([]);\n    }\n  }, [selectedProjectId]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Function to reload messages from backend\n  const reloadMessages = async () => {\n    if (!selectedProjectId) return;\n    try {\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      setMessages(res.data);\n    } catch (err) {\n      setMessages([]);\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const thinkingMessage = {\n      role: 'bot',\n      content: '⏳ Formatting your update...'\n    };\n    setMessages(prev => [...prev, userMessage, thinkingMessage]);\n    const currentInput = input;\n    setInput('');\n    const project = projects.find(p => p.id === selectedProjectId);\n    const projectName = project ? project.name : '';\n    try {\n      const response = await axios.post('http://127.0.0.1:3000/format', {\n        update: currentInput,\n        project_id: selectedProjectId,\n        project_name: projectName\n      });\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        const aiContent = response.data.formatted || response.data.message || \"No response from backend.\";\n        return [...updated, {\n          role: 'bot',\n          content: aiContent\n        }];\n      });\n    } catch (error) {\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        return [...updated, {\n          role: 'bot',\n          content: 'Error getting response.'\n        }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubscribe = async () => {\n    try {\n      const res = await axios.post('http://127.0.0.1:3000/create-checkout-session');\n      window.location.href = res.data.url;\n    } catch (err) {\n      alert('Subscription failed.');\n    }\n  };\n  const handleNewProject = async () => {\n    const name = prompt(\"Enter a name for your new project:\");\n    if (!name) return;\n    try {\n      const res = await axios.post('http://127.0.0.1:3000/projects', {\n        name\n      });\n      setProjects(prev => [...prev, res.data]);\n      setSelectedProjectId(res.data.id);\n    } catch (err) {\n      alert('Failed to create project.');\n    }\n  };\n  const summarizeProject = async () => {\n    if (!selectedProjectId) return;\n    // Gather all messages for the current project\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for summary\n      const summaryRes = await axios.post('http://127.0.0.1:3000/summarize', {\n        update: allMessages\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: summaryRes.data.summary || 'No summary available.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error summarizing project.'\n      }]);\n    }\n  };\n  const generateProjectPlan = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for project plan\n      const planRes = await axios.post('http://127.0.0.1:3000/project-plan', {\n        update: allMessages,\n        project_name: project.name\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: planRes.data.plan || 'No project plan available.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error generating project plan.'\n      }]);\n    }\n  };\n  const generateEmail = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for email generation\n      const emailRes = await axios.post('http://127.0.0.1:3000/generate-email', {\n        update: allMessages,\n        project_name: project.name\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: emailRes.data.email || 'No email generated.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error generating email.'\n      }]);\n    }\n  };\n  const filteredProjects = projects.filter(p => p.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"gpt-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt-sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-logo\",\n          children: \"\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-title\",\n          children: \"AI Project Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"gpt-sidebar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gpt-newchat-btn\",\n          onClick: handleNewProject,\n          children: \"+ New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"gpt-search-input\",\n          type: \"text\",\n          placeholder: \"Search projects...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gpt-project-list\",\n          children: [filteredProjects.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-chat-history-placeholder\",\n            children: \"No projects found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gpt-project-item${project.id === selectedProjectId ? ' selected' : ''}`,\n            onClick: () => setSelectedProjectId(project.id),\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt-sidebar-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubscribe,\n          className: \"gpt-subscribe-btn\",\n          children: \"Subscribe for Pro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"gpt-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"gpt-header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-header-title\",\n          children: \"AI Project Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), filteredProjects.find(p => p.id === selectedProjectId) && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 20,\n            fontWeight: 'bold',\n            color: '#1976d2'\n          },\n          children: [\"Project: \", (_filteredProjects$fin = filteredProjects.find(p => p.id === selectedProjectId)) === null || _filteredProjects$fin === void 0 ? void 0 : _filteredProjects$fin.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), selectedProjectId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 20,\n              padding: '4px 12px',\n              background: '#1976d2',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: summarizeProject,\n            children: \"Summarize Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              padding: '4px 12px',\n              background: '#388e3c',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: generateProjectPlan,\n            children: \"Generate Project Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              padding: '4px 12px',\n              background: '#6a1b9a',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: generateEmail,\n            children: \"Generate Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gpt-chat-title\",\n        children: ((_filteredProjects$fin2 = filteredProjects.find(p => p.id === selectedProjectId)) === null || _filteredProjects$fin2 === void 0 ? void 0 : _filteredProjects$fin2.name) || 'AI Chat'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Message, {\n          role: msg.role,\n          content: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(Message, {\n          role: \"bot\",\n          content: \"\\u23F3 Formatting your update...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-area\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleSend();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"chat-input\",\n          name: \"chat-input\",\n          placeholder: \"Paste your raw project update here...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          rows: 1,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PPhh3u8og3EXfNuY59j4uUaMhLg=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","formatBotMessage","content","split","map","line","match","emoji","title","rest","join","Message","role","className","style","background","children","fileName","_jsxFileName","lineNumber","columnNumber","color","boxShadow","dangerouslySetInnerHTML","__html","_c","App","_s","_filteredProjects$fin","_filteredProjects$fin2","input","setInput","projects","setProjects","selectedProjectId","setSelectedProjectId","messages","setMessages","loading","setLoading","search","setSearch","chatEndRef","get","then","res","data","length","id","catch","err","console","error","_chatEndRef$current","current","scrollIntoView","behavior","reloadMessages","handleSend","trim","userMessage","thinkingMessage","prev","currentInput","project","find","p","projectName","name","response","post","update","project_id","project_name","updated","slice","aiContent","formatted","message","handleSubscribe","window","location","href","url","alert","handleNewProject","prompt","summarizeProject","allMessages","summaryRes","summary","generateProjectPlan","planRes","plan","generateEmail","emailRes","email","filteredProjects","filter","toLowerCase","includes","onClick","type","placeholder","value","onChange","e","target","marginLeft","fontWeight","padding","border","borderRadius","cursor","msg","idx","ref","onSubmit","preventDefault","rows","disabled","_c2","$RefreshReg$"],"sources":["/Users/daviddornyoh/Downloads/hello-world-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction formatBotMessage(content) {\n  // Split by lines, format each line\n  return content\n    .split('\\n')\n    .map(line => {\n      // Match: emoji, section title in bold, colon, rest\n      const match = line.match(/^(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|[\\u2600-\\u27BF\\uD83C-\\uDBFF\\uDC00-\\uDFFF\\u2700-\\u27BF\\u2B50\\u23F0\\u231A\\u23E9-\\u23EF\\u23F1-\\u23F3\\u25FD-\\u25FE\\u2614-\\u2615\\u2648-\\u2653\\u267B\\u2693\\u26A1\\u26AA-\\u26AB\\u26BD-\\u26BE\\u26C4-\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2-\\u26F3\\u26F5\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u2709\\u270A-\\u270B\\u2728\\u2733-\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934-\\u2935\\u2B05-\\u2B07\\u2B1B-\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299\\uD83C\\uDC04\\uD83C\\uDCCF\\uD83C\\uDD70-\\uD83C\\uDD71\\uD83C\\uDD7E-\\uD83C\\uDD7F\\uD83C\\uDD8E\\uD83C\\uDD91-\\uD83C\\uDD9A\\uD83C\\uDDE6-\\uD83C\\uDDFF\\uD83C\\uDE01-\\uD83C\\uDE02\\uD83C\\uDE1A\\uD83C\\uDE2F\\uD83C\\uDE32-\\uD83C\\uDE3A\\uD83C\\uDE50-\\uD83C\\uDE51\\uD83C\\uDF00-\\uD83D\\uDDFF\\uD83E\\uDD00-\\uD83E\\uDDFF\\uD83D\\uDC00-\\uD83D\\uDE4F\\uD83D\\uDE80-\\uD83D\\uDEF6\\uD83D\\uDFE0-\\uD83D\\uDFEB\\uD83D\\uDFEC-\\uD83D\\uDFFF\\uD83E\\uDD10-\\uD83E\\uDDFF]+)\\s*\\*\\*(.+?)\\*\\*:(.*)$/u);\n      if (match) {\n        const [, emoji, title, rest] = match;\n        return `${emoji} <strong>${title}:</strong>${rest}`;\n      }\n      return line;\n    })\n    .join('<br/>');\n}\n\nfunction Message({ role, content }) {\n  if (role === 'bot') {\n    return (\n      <div className={`message ${role}`} style={{ background: 'none' }}>\n        <span className=\"role-label\">AI</span>\n        <div className={`bubble ${role}`} style={{ background: 'none', color: '#222', boxShadow: 'none' }} dangerouslySetInnerHTML={{ __html: formatBotMessage(content) }} />\n      </div>\n    );\n  }\n  return (\n    <div className={`message ${role}`}>\n      <span className=\"role-label\">You</span>\n      <div className={`bubble ${role}`}>{content}</div>\n    </div>\n  );\n}\n\nexport default function App() {\n  const [input, setInput] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const chatEndRef = useRef(null);\n\n  // Fetch projects on mount\n  useEffect(() => {\n    axios.get('http://127.0.0.1:3000/projects')\n      .then(res => {\n        setProjects(res.data);\n        if (res.data.length > 0) {\n          setSelectedProjectId(res.data[0].id);\n        }\n      }).catch(err => console.error('Failed to load projects', err));\n  }, []);\n\n  // Fetch messages for selected project\n  useEffect(() => {\n    if (selectedProjectId != null) {\n      axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`)\n        .then(res => setMessages(res.data))\n        .catch(err => console.error('Failed to load messages', err));\n    } else {\n      setMessages([]);\n    }\n  }, [selectedProjectId]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Function to reload messages from backend\n  const reloadMessages = async () => {\n    if (!selectedProjectId) return;\n    try {\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      setMessages(res.data);\n    } catch (err) {\n      setMessages([]);\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = { role: 'user', content: input };\n    const thinkingMessage = { role: 'bot', content: '⏳ Formatting your update...' };\n    setMessages(prev => [...prev, userMessage, thinkingMessage]);\n    const currentInput = input;\n    setInput('');\n    const project = projects.find(p => p.id === selectedProjectId);\n    const projectName = project ? project.name : '';\n    try {\n      const response = await axios.post('http://127.0.0.1:3000/format', {\n        update: currentInput,\n        project_id: selectedProjectId,\n        project_name: projectName,\n      });\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        const aiContent = response.data.formatted || response.data.message || \"No response from backend.\";\n        return [...updated, { role: 'bot', content: aiContent }];\n      });\n    } catch (error) {\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        return [...updated, { role: 'bot', content: 'Error getting response.' }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubscribe = async () => {\n    try {\n      const res = await axios.post('http://127.0.0.1:3000/create-checkout-session');\n      window.location.href = res.data.url;\n    } catch (err) {\n      alert('Subscription failed.');\n    }\n  };\n\n  const handleNewProject = async () => {\n    const name = prompt(\"Enter a name for your new project:\");\n    if (!name) return;\n    try {\n      const res = await axios.post('http://127.0.0.1:3000/projects', { name });\n      setProjects(prev => [...prev, res.data]);\n      setSelectedProjectId(res.data.id);\n    } catch (err) {\n      alert('Failed to create project.');\n    }\n  };\n\n  const summarizeProject = async () => {\n    if (!selectedProjectId) return;\n    // Gather all messages for the current project\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for summary\n      const summaryRes = await axios.post('http://127.0.0.1:3000/summarize', { update: allMessages });\n      setMessages(prev => [...prev, { role: 'bot', content: summaryRes.data.summary || 'No summary available.' }]);\n    } catch (err) {\n      setMessages(prev => [...prev, { role: 'bot', content: 'Error summarizing project.' }]);\n    }\n  };\n\n  const generateProjectPlan = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for project plan\n      const planRes = await axios.post('http://127.0.0.1:3000/project-plan', {\n        update: allMessages,\n        project_name: project.name,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: planRes.data.plan || 'No project plan available.' }\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error generating project plan.' }\n      ]);\n    }\n  };\n\n  const generateEmail = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`http://127.0.0.1:3000/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for email generation\n      const emailRes = await axios.post('http://127.0.0.1:3000/generate-email', {\n        update: allMessages,\n        project_name: project.name,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: emailRes.data.email || 'No email generated.' }\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error generating email.' }\n      ]);\n    }\n  };\n\n  const filteredProjects = projects.filter(p =>\n    p.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"gpt-root\">\n      <aside className=\"gpt-sidebar\">\n        <div className=\"gpt-sidebar-header\">\n          <span className=\"gpt-logo\">🧑‍💻</span>\n          <span className=\"gpt-title\">AI Project Assistant</span>\n        </div>\n        <nav className=\"gpt-sidebar-nav\">\n          <button className=\"gpt-newchat-btn\" onClick={handleNewProject}>+ New Project</button>\n          <input\n            className=\"gpt-search-input\"\n            type=\"text\"\n            placeholder=\"Search projects...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <div className=\"gpt-project-list\">\n            {filteredProjects.length === 0 && (\n              <div className=\"gpt-chat-history-placeholder\">No projects found</div>\n            )}\n            {filteredProjects.map(project => (\n              <div\n                key={project.id}\n                className={`gpt-project-item${project.id === selectedProjectId ? ' selected' : ''}`}\n                onClick={() => setSelectedProjectId(project.id)}\n              >\n                {project.name}\n              </div>\n            ))}\n          </div>\n        </nav>\n        <div className=\"gpt-sidebar-footer\">\n          <button onClick={handleSubscribe} className=\"gpt-subscribe-btn\">\n            Subscribe for Pro\n          </button>\n        </div>\n      </aside>\n      <main className=\"gpt-main\">\n        <header className=\"gpt-header-bar\">\n          <span className=\"gpt-header-title\">AI Project Assistant</span>\n          {filteredProjects.find(p => p.id === selectedProjectId) && (\n            <span style={{ marginLeft: 20, fontWeight: 'bold', color: '#1976d2' }}>\n              Project: {filteredProjects.find(p => p.id === selectedProjectId)?.name}\n            </span>\n          )}\n          {selectedProjectId && (\n            <>\n              <button style={{ marginLeft: 20, padding: '4px 12px', background: '#1976d2', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={summarizeProject}>\n                Summarize Project\n              </button>\n              <button style={{ marginLeft: 10, padding: '4px 12px', background: '#388e3c', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={generateProjectPlan}>\n                Generate Project Plan\n              </button>\n              <button style={{ marginLeft: 10, padding: '4px 12px', background: '#6a1b9a', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={generateEmail}>\n                Generate Email\n              </button>\n            </>\n          )}\n        </header>\n        <h1 className=\"gpt-chat-title\">\n          {filteredProjects.find(p => p.id === selectedProjectId)?.name || 'AI Chat'}\n        </h1>\n        <div className=\"chat-container\">\n          {messages.map((msg, idx) => (\n            <Message key={idx} role={msg.role} content={msg.content} />\n          ))}\n          {loading && <Message role=\"bot\" content=\"⏳ Formatting your update...\" />}\n          <div ref={chatEndRef}></div>\n        </div>\n        <form className=\"input-area\" onSubmit={e => { e.preventDefault(); handleSend(); }}>\n          <textarea\n            id=\"chat-input\"\n            name=\"chat-input\"\n            placeholder=\"Paste your raw project update here...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            rows={1}\n            disabled={loading}\n          />\n          <button type=\"submit\" disabled={loading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}