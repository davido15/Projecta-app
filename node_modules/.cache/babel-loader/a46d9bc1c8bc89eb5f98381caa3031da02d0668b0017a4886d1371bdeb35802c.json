{"ast":null,"code":"var _jsxFileName = \"/Users/daviddornyoh/Downloads/hello-world-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatBotMessage(content) {\n  // Split by lines, format each line\n  return content.split('\\n').map(line => {\n    // Match: emoji, section title in bold, colon, rest\n    const match = line.match(/^(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|[\\u2600-\\u27BF\\uD83C-\\uDBFF\\uDC00-\\uDFFF\\u2700-\\u27BF\\u2B50\\u23F0\\u231A\\u23E9-\\u23EF\\u23F1-\\u23F3\\u25FD-\\u25FE\\u2614-\\u2615\\u2648-\\u2653\\u267B\\u2693\\u26A1\\u26AA-\\u26AB\\u26BD-\\u26BE\\u26C4-\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2-\\u26F3\\u26F5\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u2709\\u270A-\\u270B\\u2728\\u2733-\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934-\\u2935\\u2B05-\\u2B07\\u2B1B-\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299\\uD83C\\uDC04\\uD83C\\uDCCF\\uD83C\\uDD70-\\uD83C\\uDD71\\uD83C\\uDD7E-\\uD83C\\uDD7F\\uD83C\\uDD8E\\uD83C\\uDD91-\\uD83C\\uDD9A\\uD83C\\uDDE6-\\uD83C\\uDDFF\\uD83C\\uDE01-\\uD83C\\uDE02\\uD83C\\uDE1A\\uD83C\\uDE2F\\uD83C\\uDE32-\\uD83C\\uDE3A\\uD83C\\uDE50-\\uD83C\\uDE51\\uD83C\\uDF00-\\uD83D\\uDDFF\\uD83E\\uDD00-\\uD83E\\uDDFF\\uD83D\\uDC00-\\uD83D\\uDE4F\\uD83D\\uDE80-\\uD83D\\uDEF6\\uD83D\\uDFE0-\\uD83D\\uDFEB\\uD83D\\uDFEC-\\uD83D\\uDFFF\\uD83E\\uDD10-\\uD83E\\uDDFF]+)\\s*\\*\\*(.+?)\\*\\*:(.*)$/u);\n    if (match) {\n      const [, emoji, title, rest] = match;\n      return `${emoji} <strong>${title}:</strong>${rest}`;\n    }\n    return line;\n  }).join('<br/>');\n}\nfunction ActionItemsList({\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      paddingLeft: 24,\n      margin: '12px 0'\n    },\n    children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), \": \", item.description, item.responsible && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontStyle: 'italic',\n          marginLeft: 8\n        },\n        children: [\"(\", item.responsible, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = ActionItemsList;\nfunction Message({\n  role,\n  content\n}) {\n  if (role === 'bot') {\n    // Try to parse as action items JSON array\n    let actionItems = null;\n    if (typeof content === 'string') {\n      try {\n        const parsed = JSON.parse(content);\n        if (Array.isArray(parsed) && parsed.length && parsed[0].title && parsed[0].description) {\n          actionItems = parsed;\n        }\n      } catch (e) {/* not JSON, fallback */}\n    }\n    if (actionItems) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${role}`,\n        style: {\n          background: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"role-label\",\n          children: \"AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bubble ${role}`,\n          style: {\n            background: 'none',\n            color: '#222',\n            boxShadow: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(ActionItemsList, {\n            items: actionItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }\n    // fallback to normal bot message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${role}`,\n      style: {\n        background: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"role-label\",\n        children: \"AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bubble ${role}`,\n        style: {\n          background: 'none',\n          color: '#222',\n          boxShadow: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${role}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"role-label\",\n      children: \"You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bubble ${role}`,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Message;\nexport default function App() {\n  _s();\n  var _filteredProjects$fin, _filteredProjects$fin2;\n  const [input, setInput] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const chatEndRef = useRef(null);\n  const BACKEND_URL = 'http://127.0.0.1:3001';\n\n  // Fetch projects on mount\n  useEffect(() => {\n    axios.get(`${BACKEND_URL}/projects`).then(res => {\n      setProjects(res.data);\n      if (res.data.length > 0) {\n        setSelectedProjectId(res.data[0].id);\n      }\n    }).catch(err => console.error('Failed to load projects', err));\n  }, []);\n\n  // Fetch messages for selected project\n  useEffect(() => {\n    if (selectedProjectId != null) {\n      axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`).then(res => setMessages(res.data)).catch(err => console.error('Failed to load messages', err));\n    } else {\n      setMessages([]);\n    }\n  }, [selectedProjectId]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Function to reload messages from backend\n  const reloadMessages = async () => {\n    if (!selectedProjectId) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      setMessages(res.data);\n    } catch (err) {\n      setMessages([]);\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const thinkingMessage = {\n      role: 'bot',\n      content: '⏳ Formatting your update...'\n    };\n    setMessages(prev => [...prev, userMessage, thinkingMessage]);\n    const currentInput = input;\n    setInput('');\n    const project = projects.find(p => p.id === selectedProjectId);\n    const projectName = project ? project.name : '';\n    try {\n      const response = await axios.post(`${BACKEND_URL}/format`, {\n        update: currentInput,\n        project_id: selectedProjectId,\n        project_name: projectName\n      });\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        const aiContent = response.data.formatted || response.data.message || \"No response from backend.\";\n        return [...updated, {\n          role: 'bot',\n          content: aiContent\n        }];\n      });\n    } catch (error) {\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        return [...updated, {\n          role: 'bot',\n          content: 'Error getting response.'\n        }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubscribe = async () => {\n    try {\n      const res = await axios.post(`${BACKEND_URL}/create-checkout-session`);\n      window.location.href = res.data.url;\n    } catch (err) {\n      alert('Subscription failed.');\n    }\n  };\n  const handleNewProject = async () => {\n    const name = prompt(\"Enter a name for your new project:\");\n    if (!name) return;\n    try {\n      const res = await axios.post(`${BACKEND_URL}/projects`, {\n        name\n      });\n      setProjects(prev => [...prev, res.data]);\n      setSelectedProjectId(res.data.id);\n    } catch (err) {\n      alert('Failed to create project.');\n    }\n  };\n  const summarizeProject = async () => {\n    if (!selectedProjectId) return;\n    // Gather all messages for the current project\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for summary\n      const summaryRes = await axios.post(`${BACKEND_URL}/summarize`, {\n        update: allMessages\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: summaryRes.data.summary || 'No summary available.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error summarizing project.'\n      }]);\n    }\n  };\n  const generateProjectPlan = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for project plan\n      const planRes = await axios.post(`${BACKEND_URL}/project-plan`, {\n        update: allMessages,\n        project_name: project.name\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: planRes.data.plan || 'No project plan available.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error generating project plan.'\n      }]);\n    }\n  };\n  const extractActionItems = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      const itemsRes = await axios.post(`${BACKEND_URL}/action-items`, {\n        update: allMessages,\n        project_name: project.name\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: JSON.stringify(itemsRes.data.action_items)\n      } // Store as JSON string\n      ]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error extracting action items.'\n      }]);\n    }\n  };\n  const analyzeSentiment = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      // FIX: Extract message content before joining\n      const allMessages = res.data.map(msg => msg.content).join('\\n');\n      const sentimentRes = await axios.post(`${BACKEND_URL}/sentiment`, {\n        update: allMessages,\n        project_name: project.name,\n        project_id: selectedProjectId\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: sentimentRes.data.sentiment || 'No sentiment found.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error analyzing sentiment.'\n      }]);\n    }\n  };\n\n  // Update generateEmail to use sentiment\n  const generateEmail = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Get sentiment first\n      const sentimentRes = await axios.post(`${BACKEND_URL}/sentiment`, {\n        update: allMessages,\n        project_name: project.name\n      });\n      const sentiment = sentimentRes.data.sentiment || '';\n      // Send to backend for email generation\n      const emailRes = await axios.post(`${BACKEND_URL}/generate-email`, {\n        update: allMessages,\n        project_name: project.name,\n        sentiment\n      });\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: emailRes.data.email || 'No email generated.'\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: 'Error generating email.'\n      }]);\n    }\n  };\n  const filteredProjects = projects.filter(p => p.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        background: '#fffbe6',\n        color: '#b26a00',\n        padding: '12px 0',\n        textAlign: 'center',\n        fontWeight: 600,\n        fontSize: '1rem',\n        borderBottom: '2px solid #ffe082',\n        zIndex: 1000,\n        position: 'fixed',\n        top: 0,\n        left: 0\n      },\n      children: \"\\uD83D\\uDEA7 This is an MVP demo. Data will be lost if the server restarts. Please try the features and share your feedback! \\uD83D\\uDEA7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"gpt-sidebar\",\n      style: {\n        marginTop: 48\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt-sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-logo\",\n          children: \"\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-title\",\n          children: \"AI Project Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"gpt-sidebar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gpt-newchat-btn\",\n          onClick: handleNewProject,\n          children: \"+ New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"gpt-search-input\",\n          type: \"text\",\n          placeholder: \"Search projects...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gpt-project-list\",\n          children: [filteredProjects.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-chat-history-placeholder\",\n            children: \"No projects found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gpt-project-item${project.id === selectedProjectId ? ' selected' : ''}`,\n            onClick: () => setSelectedProjectId(project.id),\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt-sidebar-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubscribe,\n          className: \"gpt-subscribe-btn\",\n          children: \"Subscribe for Pro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"gpt-main\",\n      style: {\n        marginTop: 48\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"gpt-header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gpt-header-title\",\n          children: \"AI Project Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), filteredProjects.find(p => p.id === selectedProjectId) && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 20,\n            fontWeight: 'bold',\n            color: '#1976d2'\n          },\n          children: [\"Project: \", (_filteredProjects$fin = filteredProjects.find(p => p.id === selectedProjectId)) === null || _filteredProjects$fin === void 0 ? void 0 : _filteredProjects$fin.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), selectedProjectId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 20,\n              padding: '4px 12px',\n              background: '#1976d2',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: summarizeProject,\n            children: \"Summarize Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              padding: '4px 12px',\n              background: '#ff9800',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: extractActionItems,\n            children: \"Extract Action Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              padding: '4px 12px',\n              background: '#0097a7',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: analyzeSentiment,\n            children: \"Analyze Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 10,\n              padding: '4px 12px',\n              background: '#6a1b9a',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 4,\n              cursor: 'pointer'\n            },\n            onClick: generateEmail,\n            children: \"Generate Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gpt-chat-title\",\n        children: ((_filteredProjects$fin2 = filteredProjects.find(p => p.id === selectedProjectId)) === null || _filteredProjects$fin2 === void 0 ? void 0 : _filteredProjects$fin2.name) || 'AI Chat'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Message, {\n          role: msg.role,\n          content: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(Message, {\n          role: \"bot\",\n          content: \"\\u23F3 Formatting your update...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-area\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleSend();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"chat-input\",\n          name: \"chat-input\",\n          placeholder: \"Paste your raw project update here...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          rows: 1,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PPhh3u8og3EXfNuY59j4uUaMhLg=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ActionItemsList\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ReactMarkdown","jsxDEV","_jsxDEV","Fragment","_Fragment","formatBotMessage","content","split","map","line","match","emoji","title","rest","join","ActionItemsList","items","style","paddingLeft","margin","children","item","idx","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","description","responsible","fontStyle","marginLeft","_c","Message","role","actionItems","parsed","JSON","parse","Array","isArray","length","e","className","background","color","boxShadow","_c2","App","_s","_filteredProjects$fin","_filteredProjects$fin2","input","setInput","projects","setProjects","selectedProjectId","setSelectedProjectId","messages","setMessages","loading","setLoading","search","setSearch","chatEndRef","BACKEND_URL","get","then","res","data","id","catch","err","console","error","_chatEndRef$current","current","scrollIntoView","behavior","reloadMessages","handleSend","trim","userMessage","thinkingMessage","prev","currentInput","project","find","p","projectName","name","response","post","update","project_id","project_name","updated","slice","aiContent","formatted","message","handleSubscribe","window","location","href","url","alert","handleNewProject","prompt","summarizeProject","allMessages","summaryRes","summary","generateProjectPlan","planRes","plan","extractActionItems","itemsRes","stringify","action_items","analyzeSentiment","msg","sentimentRes","sentiment","generateEmail","emailRes","email","filteredProjects","filter","toLowerCase","includes","width","padding","textAlign","fontSize","borderBottom","zIndex","position","top","left","marginTop","onClick","type","placeholder","value","onChange","target","border","borderRadius","cursor","ref","onSubmit","preventDefault","rows","disabled","_c3","$RefreshReg$"],"sources":["/Users/daviddornyoh/Downloads/hello-world-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\n\nfunction formatBotMessage(content) {\n  // Split by lines, format each line\n  return content\n    .split('\\n')\n    .map(line => {\n      // Match: emoji, section title in bold, colon, rest\n      const match = line.match(/^(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|[\\u2600-\\u27BF\\uD83C-\\uDBFF\\uDC00-\\uDFFF\\u2700-\\u27BF\\u2B50\\u23F0\\u231A\\u23E9-\\u23EF\\u23F1-\\u23F3\\u25FD-\\u25FE\\u2614-\\u2615\\u2648-\\u2653\\u267B\\u2693\\u26A1\\u26AA-\\u26AB\\u26BD-\\u26BE\\u26C4-\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2-\\u26F3\\u26F5\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u2709\\u270A-\\u270B\\u2728\\u2733-\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934-\\u2935\\u2B05-\\u2B07\\u2B1B-\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299\\uD83C\\uDC04\\uD83C\\uDCCF\\uD83C\\uDD70-\\uD83C\\uDD71\\uD83C\\uDD7E-\\uD83C\\uDD7F\\uD83C\\uDD8E\\uD83C\\uDD91-\\uD83C\\uDD9A\\uD83C\\uDDE6-\\uD83C\\uDDFF\\uD83C\\uDE01-\\uD83C\\uDE02\\uD83C\\uDE1A\\uD83C\\uDE2F\\uD83C\\uDE32-\\uD83C\\uDE3A\\uD83C\\uDE50-\\uD83C\\uDE51\\uD83C\\uDF00-\\uD83D\\uDDFF\\uD83E\\uDD00-\\uD83E\\uDDFF\\uD83D\\uDC00-\\uD83D\\uDE4F\\uD83D\\uDE80-\\uD83D\\uDEF6\\uD83D\\uDFE0-\\uD83D\\uDFEB\\uD83D\\uDFEC-\\uD83D\\uDFFF\\uD83E\\uDD10-\\uD83E\\uDDFF]+)\\s*\\*\\*(.+?)\\*\\*:(.*)$/u);\n      if (match) {\n        const [, emoji, title, rest] = match;\n        return `${emoji} <strong>${title}:</strong>${rest}`;\n      }\n      return line;\n    })\n    .join('<br/>');\n}\n\nfunction ActionItemsList({ items }) {\n  return (\n    <ul style={{ paddingLeft: 24, margin: '12px 0' }}>\n      {items.map((item, idx) => (\n        <li key={idx} style={{ marginBottom: 12 }}>\n          <span style={{ fontWeight: 'bold' }}>{item.title}</span>: {item.description}\n          {item.responsible && (\n            <span style={{ fontStyle: 'italic', marginLeft: 8 }}>({item.responsible})</span>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Message({ role, content }) {\n  if (role === 'bot') {\n    // Try to parse as action items JSON array\n    let actionItems = null;\n    if (typeof content === 'string') {\n      try {\n        const parsed = JSON.parse(content);\n        if (Array.isArray(parsed) && parsed.length && parsed[0].title && parsed[0].description) {\n          actionItems = parsed;\n        }\n      } catch (e) { /* not JSON, fallback */ }\n    }\n    if (actionItems) {\n      return (\n        <div className={`message ${role}`} style={{ background: 'none' }}>\n          <span className=\"role-label\">AI</span>\n          <div className={`bubble ${role}`} style={{ background: 'none', color: '#222', boxShadow: 'none' }}>\n            <ActionItemsList items={actionItems} />\n          </div>\n        </div>\n      );\n    }\n    // fallback to normal bot message\n    return (\n      <div className={`message ${role}`} style={{ background: 'none' }}>\n        <span className=\"role-label\">AI</span>\n        <div className={`bubble ${role}`} style={{ background: 'none', color: '#222', boxShadow: 'none' }}>\n          <ReactMarkdown>{content}</ReactMarkdown>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={`message ${role}`}>\n      <span className=\"role-label\">You</span>\n      <div className={`bubble ${role}`}>{content}</div>\n    </div>\n  );\n}\n\nexport default function App() {\n  const [input, setInput] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const chatEndRef = useRef(null);\n\n  const BACKEND_URL = 'http://127.0.0.1:3001';\n\n  // Fetch projects on mount\n  useEffect(() => {\n    axios.get(`${BACKEND_URL}/projects`)\n      .then(res => {\n        setProjects(res.data);\n        if (res.data.length > 0) {\n          setSelectedProjectId(res.data[0].id);\n        }\n      }).catch(err => console.error('Failed to load projects', err));\n  }, []);\n\n  // Fetch messages for selected project\n  useEffect(() => {\n    if (selectedProjectId != null) {\n      axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`)\n        .then(res => setMessages(res.data))\n        .catch(err => console.error('Failed to load messages', err));\n    } else {\n      setMessages([]);\n    }\n  }, [selectedProjectId]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Function to reload messages from backend\n  const reloadMessages = async () => {\n    if (!selectedProjectId) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      setMessages(res.data);\n    } catch (err) {\n      setMessages([]);\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = { role: 'user', content: input };\n    const thinkingMessage = { role: 'bot', content: '⏳ Formatting your update...' };\n    setMessages(prev => [...prev, userMessage, thinkingMessage]);\n    const currentInput = input;\n    setInput('');\n    const project = projects.find(p => p.id === selectedProjectId);\n    const projectName = project ? project.name : '';\n    try {\n      const response = await axios.post(`${BACKEND_URL}/format`, {\n        update: currentInput,\n        project_id: selectedProjectId,\n        project_name: projectName,\n      });\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        const aiContent = response.data.formatted || response.data.message || \"No response from backend.\";\n        return [...updated, { role: 'bot', content: aiContent }];\n      });\n    } catch (error) {\n      setMessages(prev => {\n        const updated = prev.slice(0, -1);\n        return [...updated, { role: 'bot', content: 'Error getting response.' }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubscribe = async () => {\n    try {\n      const res = await axios.post(`${BACKEND_URL}/create-checkout-session`);\n      window.location.href = res.data.url;\n    } catch (err) {\n      alert('Subscription failed.');\n    }\n  };\n\n  const handleNewProject = async () => {\n    const name = prompt(\"Enter a name for your new project:\");\n    if (!name) return;\n    try {\n      const res = await axios.post(`${BACKEND_URL}/projects`, { name });\n      setProjects(prev => [...prev, res.data]);\n      setSelectedProjectId(res.data.id);\n    } catch (err) {\n      alert('Failed to create project.');\n    }\n  };\n\n  const summarizeProject = async () => {\n    if (!selectedProjectId) return;\n    // Gather all messages for the current project\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for summary\n      const summaryRes = await axios.post(`${BACKEND_URL}/summarize`, { update: allMessages });\n      setMessages(prev => [...prev, { role: 'bot', content: summaryRes.data.summary || 'No summary available.' }]);\n    } catch (err) {\n      setMessages(prev => [...prev, { role: 'bot', content: 'Error summarizing project.' }]);\n    }\n  };\n\n  const generateProjectPlan = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      // Fetch all messages for the project\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Send to backend for project plan\n      const planRes = await axios.post(`${BACKEND_URL}/project-plan`, {\n        update: allMessages,\n        project_name: project.name,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: planRes.data.plan || 'No project plan available.' }\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error generating project plan.' }\n      ]);\n    }\n  };\n\n  const extractActionItems = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      const itemsRes = await axios.post(`${BACKEND_URL}/action-items`, {\n        update: allMessages,\n        project_name: project.name,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: JSON.stringify(itemsRes.data.action_items) } // Store as JSON string\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error extracting action items.' }\n      ]);\n    }\n  };\n\n  const analyzeSentiment = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      // FIX: Extract message content before joining\n      const allMessages = res.data.map(msg => msg.content).join('\\n');\n      const sentimentRes = await axios.post(`${BACKEND_URL}/sentiment`, {\n        update: allMessages,\n        project_name: project.name,\n        project_id: selectedProjectId,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: sentimentRes.data.sentiment || 'No sentiment found.' }\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error analyzing sentiment.' }\n      ]);\n    }\n  };\n\n  // Update generateEmail to use sentiment\n  const generateEmail = async () => {\n    if (!selectedProjectId) return;\n    const project = projects.find(p => p.id === selectedProjectId);\n    if (!project) return;\n    try {\n      const res = await axios.get(`${BACKEND_URL}/projects/${selectedProjectId}/messages`);\n      const allMessages = res.data.join('\\n');\n      // Get sentiment first\n      const sentimentRes = await axios.post(`${BACKEND_URL}/sentiment`, {\n        update: allMessages,\n        project_name: project.name,\n      });\n      const sentiment = sentimentRes.data.sentiment || '';\n      // Send to backend for email generation\n      const emailRes = await axios.post(`${BACKEND_URL}/generate-email`, {\n        update: allMessages,\n        project_name: project.name,\n        sentiment,\n      });\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: emailRes.data.email || 'No email generated.' }\n      ]);\n    } catch (err) {\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', content: 'Error generating email.' }\n      ]);\n    }\n  };\n\n  const filteredProjects = projects.filter(p =>\n    p.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"gpt-root\">\n      {/* MVP Demo Banner */}\n      <div style={{\n        width: '100%',\n        background: '#fffbe6',\n        color: '#b26a00',\n        padding: '12px 0',\n        textAlign: 'center',\n        fontWeight: 600,\n        fontSize: '1rem',\n        borderBottom: '2px solid #ffe082',\n        zIndex: 1000,\n        position: 'fixed',\n        top: 0,\n        left: 0\n      }}>\n        🚧 This is an MVP demo. Data will be lost if the server restarts. Please try the features and share your feedback! 🚧\n      </div>\n      <aside className=\"gpt-sidebar\" style={{ marginTop: 48 }}>\n        <div className=\"gpt-sidebar-header\">\n          <span className=\"gpt-logo\">🧑‍💻</span>\n          <span className=\"gpt-title\">AI Project Assistant</span>\n        </div>\n        <nav className=\"gpt-sidebar-nav\">\n          <button className=\"gpt-newchat-btn\" onClick={handleNewProject}>+ New Project</button>\n          <input\n            className=\"gpt-search-input\"\n            type=\"text\"\n            placeholder=\"Search projects...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <div className=\"gpt-project-list\">\n            {filteredProjects.length === 0 && (\n              <div className=\"gpt-chat-history-placeholder\">No projects found</div>\n            )}\n            {filteredProjects.map(project => (\n              <div\n                key={project.id}\n                className={`gpt-project-item${project.id === selectedProjectId ? ' selected' : ''}`}\n                onClick={() => setSelectedProjectId(project.id)}\n              >\n                {project.name}\n              </div>\n            ))}\n          </div>\n        </nav>\n        <div className=\"gpt-sidebar-footer\">\n          <button onClick={handleSubscribe} className=\"gpt-subscribe-btn\">\n            Subscribe for Pro\n          </button>\n        </div>\n      </aside>\n      <main className=\"gpt-main\" style={{ marginTop: 48 }}>\n        <header className=\"gpt-header-bar\">\n          <span className=\"gpt-header-title\">AI Project Assistant</span>\n          {filteredProjects.find(p => p.id === selectedProjectId) && (\n            <span style={{ marginLeft: 20, fontWeight: 'bold', color: '#1976d2' }}>\n              Project: {filteredProjects.find(p => p.id === selectedProjectId)?.name}\n            </span>\n          )}\n          {selectedProjectId && (\n            <>\n              <button style={{ marginLeft: 20, padding: '4px 12px', background: '#1976d2', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={summarizeProject}>\n                Summarize Project\n              </button>\n              <button style={{ marginLeft: 10, padding: '4px 12px', background: '#ff9800', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={extractActionItems}>\n                Extract Action Items\n              </button>\n              <button style={{ marginLeft: 10, padding: '4px 12px', background: '#0097a7', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={analyzeSentiment}>\n                Analyze Sentiment\n              </button>\n              <button style={{ marginLeft: 10, padding: '4px 12px', background: '#6a1b9a', color: '#fff', border: 'none', borderRadius: 4, cursor: 'pointer' }}\n                onClick={generateEmail}>\n                Generate Email\n              </button>\n            </>\n          )}\n        </header>\n        <h1 className=\"gpt-chat-title\">\n          {filteredProjects.find(p => p.id === selectedProjectId)?.name || 'AI Chat'}\n        </h1>\n        <div className=\"chat-container\">\n          {messages.map((msg, idx) => (\n            <Message key={idx} role={msg.role} content={msg.content} />\n          ))}\n          {loading && <Message role=\"bot\" content=\"⏳ Formatting your update...\" />}\n          <div ref={chatEndRef}></div>\n        </div>\n        <form className=\"input-area\" onSubmit={e => { e.preventDefault(); handleSend(); }}>\n          <textarea\n            id=\"chat-input\"\n            name=\"chat-input\"\n            placeholder=\"Paste your raw project update here...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            rows={1}\n            disabled={loading}\n          />\n          <button type=\"submit\" disabled={loading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}